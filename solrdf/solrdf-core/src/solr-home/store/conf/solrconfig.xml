<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
	This is a solr configuration that is supposed to act as a template for deploying SolRDF.
	As consequence of that, some settings are not supposed to be universally valid and should be tuned / configured 
	according with your specific deployment contextx.
	
	For instance, if you have a master / slave architecture the replication section needs to be configured, the autocommit makes sense
	only on master, etc etc.   
 -->
<config>
	<luceneMatchVersion>5.2.1</luceneMatchVersion>
	<dataDir>${solr.data.dir}/${solr.core.name}/data</dataDir>
	<directoryFactory name="DirectoryFactory" class="${solr.directoryFactory:solr.NRTCachingDirectoryFactory}" />
	<codecFactory class="solr.SchemaCodecFactory" />
	<schemaFactory class="ClassicIndexSchemaFactory" />
	<indexConfig>
		<lockType>${solr.lock.type:native}</lockType>
	</indexConfig>
	<updateHandler class="solr.DirectUpdateHandler2">
		<updateLog>
			<str name="dir">${solr.ulog.dir:/tmp}</str>
		</updateLog>	
		<autoSoftCommit>
			<maxTime>5000</maxTime>
			<openSearcher>true</openSearcher>
		</autoSoftCommit>			
		<autoCommit>
			<maxTime>15000</maxTime>
			<openSearcher>false</openSearcher>
		</autoCommit>
	</updateHandler>
	<query>
		<maxBooleanClauses>1024</maxBooleanClauses>
		<filterCache class="solr.FastLRUCache" size="512" initialSize="512" autowarmCount="0" />
		<queryResultCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0" />
		<documentCache class="solr.LRUCache" size="512" initialSize="512" autowarmCount="0" />
		<enableLazyFieldLoading>true</enableLazyFieldLoading>
		<queryResultWindowSize>20</queryResultWindowSize>
		<queryResultMaxDocsCached>200</queryResultMaxDocsCached>
		<useColdSearcher>false</useColdSearcher>
		<maxWarmingSearchers>2</maxWarmingSearchers>
	</query>
	<requestDispatcher handleSelect="true">
		<!-- 
			IMPORTANT: in order to agree on the client requested output format the "Accept" header
			must be visible to internal components.
		-->
		<requestParsers 
			enableRemoteStreaming="true" 
			multipartUploadLimitInKB="2048000" 
			formdataUploadLimitInKB="2048" 
			addHttpRequestToContext="true"/>
		<httpCaching never304="true" />
	</requestDispatcher>
	
	<!-- SPARQL 1.1 Graph Store protocol endpoint -->
	<requestHandler name="/rdf-graph-store" class="org.gazzax.labs.solrdf.handler.Sparql11GraphStoreProtocolHandler" default="true">
		<lst name="invariants">
			<str name="s">/sparql-query</str>
			<str name="u">/sparql-update</str>
		</lst>
	</requestHandler>
	
	<!-- 
		SOLR Query endpoint (see https://github.com/agazzarini/SolRDF/issues/25)
	-->	
	<requestHandler name="/solr-query" class="solr.SearchHandler" default="true">
		<lst name="defaults">
			<str name="echoParams">none</str>
			<int name="rows">10</int>
			<str name="wt">xml</str>
		</lst>
	</requestHandler>
	
	<!-- 
		RequestHandler acting as SPARQL endpoint / facade 
	-->
	<requestHandler name="/sparql" class="org.gazzax.labs.solrdf.handler.search.handler.Sparql11SearchHandler">
		<lst name="invariants">
			<str name="s">/sparql-query</str>
			<str name="u">/sparql-update</str>
		</lst>
	</requestHandler>

	<!-- 
		SPARQL Query 
		http://www.w3.org/TR/sparql11-query
	-->	
	<requestHandler name="/sparql-query" class="solr.SearchHandler">
		<lst name="invariants">
			<str name="echoParams">none</str>
			<str name="defType">sparql</str>
			<str name="sort">id asc</str>
			<str name="wt">hybrid</str>
		</lst>
		<lst name="defaults">
			<!-- 
				A default value for q will act as default query both for RDF and Hybrid mode.
				See https://github.com/agazzarini/SolRDF/issues/71
				
				<str name="q">SELECT * WHERE { ?s ?p ?o } LIMIT 10</str>
			-->
			<!--  
				This is the default query when SolRDF will run in Hybrid mode.
				See https://github.com/agazzarini/SolRDF/issues/71				
			-->
			<str name="dfhq">SELECT * WHERE { ?s ?p ?o }</str>
		</lst>		
		<arr name="components">
			<str>sparql-query</str>
		</arr>		
	</requestHandler>

	<!--
		SPARQL Update 
		see http://www.w3.org/TR/sparql11-update
	-->
	<requestHandler name="/sparql-update" class="org.gazzax.labs.solrdf.handler.update.RdfUpdateRequestHandler"/>

	<!-- Bulk update REST handler -->
	<requestHandler name="/update/bulk" class="org.gazzax.labs.solrdf.handler.update.RdfBulkUpdateRequestHandler"/>

	<!-- Replication Handler -->
	<requestHandler name="/replication" class="solr.ReplicationHandler" startup="lazy" />

	<!-- Realtime handler -->
	<requestHandler name="/get" class="solr.RealTimeGetHandler">
		<lst name="defaults">
			<str name="omitHeader">true</str>
			<str name="wt">json</str>
		</lst>
	</requestHandler>
	
	<!-- Classic Solr UpdateRequestHandler -->
	<requestHandler name="/update" class="org.apache.solr.handler.UpdateRequestHandler"/>
		
	<requestHandler name="/analysis/field" startup="lazy" class="solr.FieldAnalysisRequestHandler" />
	<requestHandler name="/analysis/document" class="solr.DocumentAnalysisRequestHandler" startup="lazy" />
	<requestHandler name="/admin/ping" class="solr.PingRequestHandler">
		<lst name="invariants">
			<str name="q">*:*</str>
		</lst>
		<lst name="defaults">
			<str name="echoParams">all</str>
		</lst>
	</requestHandler>
	<queryParser name="sparql" class="org.gazzax.labs.solrdf.search.qparser.SparqlQParserPlugin"/>
	<searchComponent name="sparql-query" class="org.gazzax.labs.solrdf.search.component.SparqlSearchComponent"/>
	<queryResponseWriter name="hybrid" class="org.gazzax.labs.solrdf.response.HybridResponseWriter">
		<lst name="content-types">
			<!-- SELECT -->
			<str name="111">application/sparql-results+xml,application/sparql-results+json,text/csv,text/plain,text/tab-separated-values</str>
			<!-- CONSTRUCT -->
			<str name="222">application/rdf+xml,application/n-triples,text/turtle</str>
			<!-- DESCRIBE -->
			<str name="333">application/rdf+xml,application/n-triples,text/turtle</str>
			<!-- ASK -->
			<str name="444">text/csv,text/plain,text/tab-separated-values,application/sparql-results+xml,application/sparql-results+json</str>
		</lst>		
	</queryResponseWriter>
	<admin>
		<defaultQuery>*:*</defaultQuery>
	</admin>
</config>
